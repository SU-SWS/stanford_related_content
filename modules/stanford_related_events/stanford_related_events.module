<?php
/**
 * @file
 * Code for the Stanford Related Events feature.
 */

include_once 'stanford_related_events.features.inc';


/*
 * Implements hook_views_default_views_alter().
 *
 * @param array $views
 *   Array of views for the site
 */
function stanford_related_events_views_default_views_alter(&$views) {

  if (array_key_exists('stanford_events_views', $views)) {
    stanford_related_events_alter_upcoming_block($views['stanford_events_views']);
    stanford_related_events_alter_upcoming_page($views['stanford_events_views']);
    stanford_related_events_stanford_events_views_override($views['stanford_events_views']);
  }
  if (array_key_exists('stanford_events_manage', $views)) {
    stanford_related_events_alter_manage_events($views['stanford_events_manage']);
  }
}
/*
 * Add exposed filter for related content to the page display
 *
 * @param object $view
 *   View to be altered
 */
function stanford_related_events_alter_manage_events(&$view){

  // Filter criterion: Content: Has taxonomy terms (with depth)

  // Check to see if the filters are overridden. if so, use the default instead.
  $handler = $view->display['page']->handler;
  if (!isset ($handler->display->display_options['filters'])){
    $handler = $view->display['default']->handler;
  }

  $handler->display->display_options['filters']['term_node_tid_depth']['id'] = 'term_node_tid_depth';
  $handler->display->display_options['filters']['term_node_tid_depth']['table'] = 'node';
  $handler->display->display_options['filters']['term_node_tid_depth']['field'] = 'term_node_tid_depth';
  $handler->display->display_options['filters']['term_node_tid_depth']['exposed'] = TRUE;
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['operator_id'] = 'term_node_tid_depth_op';
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['label'] = 'Filter by related content';
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['operator'] = 'term_node_tid_depth_op';
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['identifier'] = 'term_node_tid_depth';
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['multiple'] = FALSE;
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['remember_roles'] = array(
    2 => '2',
    1 => 0,
    6 => 0,
    5 => 0,
    4 => 0,
    3 => 0,
    9 => 0,
    7 => 0,
    8 => 0,
  );
  $handler->display->display_options['filters']['term_node_tid_depth']['type'] = 'select';
  $handler->display->display_options['filters']['term_node_tid_depth']['vocabulary'] = 'stanford_related_content';
  $handler->display->display_options['filters']['term_node_tid_depth']['hierarchy'] = 1;
  $handler->display->display_options['filters']['term_node_tid_depth']['depth'] = '0';

  // Field: Content: Related Content

  // Check to see if the fields are overridden. if so, use the default instead.
  $handler = $view->display['page']->handler;
  if (!isset ($handler->display->display_options['filters'])){
    $handler = $view->display['default']->handler;
  }

  $handler->display->display_options['fields']['field_s_related_content']['id'] = 'field_s_related_content';
  $handler->display->display_options['fields']['field_s_related_content']['table'] = 'field_data_field_s_related_content';
  $handler->display->display_options['fields']['field_s_related_content']['field'] = 'field_s_related_content';
  $handler->display->display_options['fields']['field_s_related_content']['type'] = 'taxonomy_term_reference_plain';
  $handler->display->display_options['fields']['field_s_related_content']['delta_offset'] = '0';
  $handler->display->display_options['fields']['field_s_related_content']['multi_type'] = 'ul';

  // VBO
  $handler->display->display_options['fields']['views_bulk_operations']['vbo_operations']['action::views_bulk_operations_modify_action'] =
    array(
      'selected' => 1,
      'postpone_processing' => 0,
      'skip_confirmation' => 0,
      'override_label' => 1,
      'label' => 'Modify',
      'settings' => array(
        'show_all_tokens' => 0,
        'display_values' => array(
          'stanford_event::field_s_event_type' => 'stanford_event::field_s_event_type',
          'stanford_event::field_s_related_content' => 'stanford_event::field_s_related_content',
        ),
      ),
    );

}

/*
 * Add contextual filter for related content to the page display
 *
 * @param object $view
 *   View to be altered
 */
function stanford_related_events_alter_upcoming_page(&$view){

  $handler = $view->display['page']->handler;

  // Filter criterion: Content: Has taxonomy terms (with depth)

  $handler->display->display_options['filters']['term_node_tid_depth']['id'] = 'term_node_tid_depth';
  $handler->display->display_options['filters']['term_node_tid_depth']['table'] = 'node';
  $handler->display->display_options['filters']['term_node_tid_depth']['field'] = 'term_node_tid_depth';
  $handler->display->display_options['filters']['term_node_tid_depth']['exposed'] = TRUE;
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['operator_id'] = 'term_node_tid_depth_op';
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['label'] = 'Filter by related content';
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['operator'] = 'term_node_tid_depth_op';
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['identifier'] = 'term_node_tid_depth';
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['multiple'] = TRUE;
  $handler->display->display_options['filters']['term_node_tid_depth']['expose']['remember_roles'] = array(
    2 => '2',
    1 => 0,
    6 => 0,
    5 => 0,
    4 => 0,
    3 => 0,
    9 => 0,
    7 => 0,
    8 => 0,
  );
  $handler->display->display_options['filters']['term_node_tid_depth']['type'] = 'select';
  $handler->display->display_options['filters']['term_node_tid_depth']['vocabulary'] = 'stanford_related_content';
  $handler->display->display_options['filters']['term_node_tid_depth']['hierarchy'] = 1;
  $handler->display->display_options['filters']['term_node_tid_depth']['depth'] = '0';

}

/*
 * Copy the block display in the stanford_events_view and add contextual filter for related content
 *
 * @param object $view
 *   View to be altered
 */
function stanford_related_events_alter_upcoming_block(&$view){

  // Copy the block display
  $display_orig = $view->display['block'];
  $handler = $view->new_display('block', 'Filtered Upcoming Block', 'filtered_upcoming_block');

  foreach($display_orig->handler->display->display_options as $key => $value) {
    $handler->set_option($key, $value);
  }

  // Add the contextual filter
  $handler->display->display_options['defaults']['arguments'] = FALSE;
  /* Contextual filter: Content: Has taxonomy term ID (with depth) */
  $handler->display->display_options['arguments']['term_node_tid_depth']['id'] = 'term_node_tid_depth';
  $handler->display->display_options['arguments']['term_node_tid_depth']['table'] = 'node';
  $handler->display->display_options['arguments']['term_node_tid_depth']['field'] = 'term_node_tid_depth';
  $handler->display->display_options['arguments']['term_node_tid_depth']['default_action'] = 'default';
  $handler->display->display_options['arguments']['term_node_tid_depth']['title_enable'] = TRUE;
  $handler->display->display_options['arguments']['term_node_tid_depth']['title'] = 'Related Upcoming Events ';
  $handler->display->display_options['arguments']['term_node_tid_depth']['default_argument_type'] = 'taxonomy_tid';
  $handler->display->display_options['arguments']['term_node_tid_depth']['default_argument_options']['node'] = TRUE;
  $handler->display->display_options['arguments']['term_node_tid_depth']['default_argument_options']['anyall'] = '+';
  $handler->display->display_options['arguments']['term_node_tid_depth']['default_argument_options']['vocabularies'] = array(
    'stanford_related_content' => 'stanford_related_content',
  );
  $handler->display->display_options['arguments']['term_node_tid_depth']['summary']['number_of_records'] = '0';
  $handler->display->display_options['arguments']['term_node_tid_depth']['summary']['format'] = 'default_summary';
  $handler->display->display_options['arguments']['term_node_tid_depth']['summary_options']['items_per_page'] = '25';
  $handler->display->display_options['arguments']['term_node_tid_depth']['specify_validation'] = TRUE;
  $handler->display->display_options['arguments']['term_node_tid_depth']['depth'] = '0';
  $handler->display->display_options['arguments']['term_node_tid_depth']['break_phrase'] = TRUE;


  $handler->display->display_options['use_more'] = FALSE;
  $handler->display->display_options['use_more_always'] = FALSE;//cjw
  $handler->display->display_options['defaults']['link_display'] = FALSE;
  $handler->display->display_options['defaults']['footer'] = FALSE;

  // Footer: Global: See more link
  $handler->display->display_options['footer']['area']['id'] = 'area';
  $handler->display->display_options['footer']['area']['table'] = 'views';
  $handler->display->display_options['footer']['area']['field'] = 'area';
  $handler->display->display_options['footer']['area']['ui_name'] = 'Global: See more link';
  $handler->display->display_options['footer']['area']['content'] = '[hook_views_pre_build:events/upcoming-events]';
  $handler->display->display_options['footer']['area']['format'] = 'content_editor_text_format';
  $handler->display->display_options['footer']['area']['tokenize'] = TRUE;
  $handler->display->display_options['defaults']['arguments'] = FALSE;

}

/*
 * Implements hook_views_pre_build().
 *
 * @param object $view
 *   View to be altered
 *
 * This rewrites the pattern and replaces it with a link to the related view page.
 *
 */
function stanford_related_events_views_pre_build(&$view){
  if (($view->name == "stanford_events_views") || ($view->name == "stanford_events_views_override")){
    if (($view->current_display == "filtered_upcoming_block") ||
      ($view->current_display == "block_5")){
      $subject = $view->footer["area"]->options["content"];
      $view->footer["area"]->options["content"] = stanford_related_content_add_more_link($subject, "See more related events");
    }
  }
}


/*
 * Because the view might be overridden, make a copy of the view and use it instead
 *
 *  @param object $view
 *   View to be copied
*/
function stanford_related_events_stanford_events_views_override($orig_view){

  $new_view = $orig_view->clone_view();
  $new_view->name = $orig_view->name . '_override';
  $new_view->human_name = $orig_view->human_name . ' Override';

  $new_view->save();
}

/**
 * Implements hook_views_default_view_override_views_to_override().
 */
function stanford_related_events_views_default_view_override_views_to_override() {
  return array(
    // Override the default view with the one provided by my_module.
    'stanford_events_views' => 'stanford_events_views_override',
  );
}

