<?php
/**
 * @file
 * Code for the Stanford Related Events feature.
 */

include_once 'stanford_related_events.features.inc';


/*
 * Implements hook_views_default_views_alter().
 *
 * @param array $views
 *   Array of views for the site
 */
function stanford_related_events_views_default_views_alter(&$views) {
    stanford_related_events_alter_upcoming_block($views, 'stanford_events_views');
    stanford_related_events_alter_upcoming_page($views, 'stanford_events_views');
    stanford_related_events_alter_manage_events($views, 'stanford_events_manage');
}
/*
 * Add exposed filter for related content to the page display
 *
 * @param object $view
 *   View to be altered
 */
function stanford_related_events_alter_manage_events(&$views, $name = 'stanford_events_manage') {
  if (array_key_exists($name, $views)) {
    $view = $views[$name];
  }
  else {
    watchdog('stanford_events_manage', "View \'%name\' not available.",
      array('%name' => $name), WATCHDOG_ERROR);
    return;
  }

  if ($view->set_display('page')){
    $handler = $view->display_handler;
  }
  else {
    watchdog('stanford_related_events', "Display \'page\' not available in view %name.",
      array('%name' => $name), WATCHDOG_ERROR);
    return;
  }
/*
  // Filter criterion: Content: Has taxonomy terms (with depth)
  if (is_null($view->display['page']->handler)) {
    $display = $view->display['page'];
  }
  elseif (isset ($view->display['page']->handler->display)) {
      $display = $view->display['page']->handler->display;
  }
  else {
    watchdog('stanford_events_manage', "Display \'page\' not available in view %name.",
      array('%name' => $name), WATCHDOG_ERROR);
  }

  // Check to see if the filters are overridden. if so, alter the default instead.
  if (!isset ($display->display_options['filters'])) {
    if (is_null($view->display['default']->handler)) {
      $display = $view->display['default'];
    }
    elseif (isset ($view->display['default']->handler)) {
      $display = $view->display['default']->handler;
    }
    else {
      watchdog('stanford_related_events', "Display \'default\' not available in view %name.",
        array('%name' => $name), WATCHDOG_ERROR);
    }
  }
  */
  $options = array();
  $options['term_node_tid_depth']['id'] = 'term_node_tid_depth';
  $options['term_node_tid_depth']['table'] = 'node';
  $options['term_node_tid_depth']['field'] = 'term_node_tid_depth';
  $options['term_node_tid_depth']['exposed'] = TRUE;
  $options['term_node_tid_depth']['expose']['operator_id'] = 'term_node_tid_depth_op';
  $options['term_node_tid_depth']['expose']['label'] = 'Filter by related content';
  $options['term_node_tid_depth']['expose']['operator'] = 'term_node_tid_depth_op';
  $options['term_node_tid_depth']['expose']['identifier'] = 'term_node_tid_depth';
  $options['term_node_tid_depth']['expose']['multiple'] = FALSE;
  $options['term_node_tid_depth']['expose']['remember_roles'] = array(
    2 => '2',
    1 => 0,
    6 => 0,
    5 => 0,
    4 => 0,
    3 => 0,
    9 => 0,
    7 => 0,
    8 => 0,
  );
  $options['term_node_tid_depth']['type'] = 'select';
  $options['term_node_tid_depth']['vocabulary'] = 'stanford_related_content';
  $options['term_node_tid_depth']['hierarchy'] = 1;
  $options['term_node_tid_depth']['depth'] = '0';
  $handler->set_option('filters', $options);

  // Field: Content: Related Content

  // Check to see if the filters are overridden. if so, use the default instead.
  if (is_null($view->display['page']->handler)) {
    $display = $view->display['page'];
  }
  elseif (isset ($view->display['page']->handler->display)) {
    $display = $view->display['page']->handler->display;
  }
  else {
    watchdog('stanford_related_events', "Display \'page\' not available in view %name.",
      array('%name' => $name), WATCHDOG_ERROR);
  }

  if (!isset ($display->display_options['filters'])) {
    if (is_null($view->display['default']->handler)) {
      $display = $view->display['default'];
    }
    elseif (isset ($view->display['default']->handler)) {
      $display = $view->display['default']->handler;
    }
    else {
      watchdog('stanford_related_events', "Display \'default\' not available in view %name.",
        array('%name' => $name), WATCHDOG_ERROR);
    }
  }

  $display->display_options['fields']['field_s_related_content']['id'] = 'field_s_related_content';
  $display->display_options['fields']['field_s_related_content']['table'] = 'field_data_field_s_related_content';
  $display->display_options['fields']['field_s_related_content']['field'] = 'field_s_related_content';
  $display->display_options['fields']['field_s_related_content']['type'] = 'taxonomy_term_reference_plain';
  $display->display_options['fields']['field_s_related_content']['delta_offset'] = '0';
  $display->display_options['fields']['field_s_related_content']['multi_type'] = 'ul';

  // VBO
  $display->display_options['fields']['views_bulk_operations']['vbo_operations']['action::views_bulk_operations_modify_action'] =
    array(
      'selected' => 1,
      'postpone_processing' => 0,
      'skip_confirmation' => 0,
      'override_label' => 1,
      'label' => 'Modify',
      'settings' => array(
        'show_all_tokens' => 0,
        'display_values' => array(
          'stanford_event::field_s_event_type' => 'stanford_event::field_s_event_type',
          'stanford_event::field_s_related_content' => 'stanford_event::field_s_related_content',
        ),
      ),
    );

}

/*
 * Add contextual filter for related content to the page display
 *
 * @param object $view
 *   View to be altered
 */
function stanford_related_events_alter_upcoming_page(&$views, $name = 'stanford_events_views') {

  if (array_key_exists($name, $views)) {
    $view = $views[$name];
  }
  else {
    watchdog('stanford_related_events', "View \'%name\' not available.",
      array('%name' => $name), WATCHDOG_ERROR);
    return;
  }

  if ($view->set_display('page')){
    $handler = $view->display_handler;
  }
  else {
    watchdog('stanford_related_events', "Display \'page\' not available in view %name.",
      array('%name' => $name), WATCHDOG_ERROR);
    return;
  }

  $options = array();
  $options['term_node_tid_depth']['id'] = 'term_node_tid_depth';
  $options['term_node_tid_depth']['table'] = 'node';
  $options['term_node_tid_depth']['field'] = 'term_node_tid_depth';
  $options['term_node_tid_depth']['exposed'] = TRUE;
  $options['term_node_tid_depth']['expose']['operator_id'] = 'term_node_tid_depth_op';
  $options['term_node_tid_depth']['expose']['label'] = 'Filter by related content';
  $options['term_node_tid_depth']['expose']['operator'] = 'term_node_tid_depth_op';
  $options['term_node_tid_depth']['expose']['identifier'] = 'term_node_tid_depth';
  $options['term_node_tid_depth']['expose']['multiple'] = TRUE;
  $options['term_node_tid_depth']['expose']['remember_roles'] = array(
    2 => '2',
    1 => 0,
    6 => 0,
    5 => 0,
    4 => 0,
    3 => 0,
    9 => 0,
    7 => 0,
    8 => 0,
  );
  $options['term_node_tid_depth']['type'] = 'select';
  $options['term_node_tid_depth']['vocabulary'] = 'stanford_related_content';
  $options['term_node_tid_depth']['hierarchy'] = 1;
  $options['term_node_tid_depth']['depth'] = '0';

  $handler->set_option('filters', $options);
}

/*
 * Copy the block display in the stanford_events_view and add contextual filter for related content
 *
 * @param object $view
 *   View to be altered
 */
function stanford_related_events_alter_upcoming_block(&$views, $name = 'stanford_events_views') {
  if (array_key_exists($name, $views)) {
    $view = $views[$name];
  }
  else {
    watchdog('stanford_related_events', "View \'%name\' not available.",
      array('%name' => $name), WATCHDOG_ERROR);
    return;
  }

  // Copy the block display
  $display_orig = $view->display['block'];
  $handler = $view->new_display('block', 'Filtered Upcoming Block', 'filtered_upcoming_block');

  if (is_array($display_orig->handler->display->display_options)) {
    foreach ($display_orig->handler->display->display_options as $key => $value) {
      $handler->set_option($key, $value);
    }
  }

  // Add the contextual filter
  $handler->set_option('defaults', array('arguments', FALSE ));

  $options = array();
  $options['term_node_tid_depth']['id'] = 'term_node_tid_depth';
  $options['term_node_tid_depth']['table'] = 'node';
  $options['term_node_tid_depth']['field'] = 'term_node_tid_depth';
  $options['term_node_tid_depth']['default_action'] = 'default';
  $options['term_node_tid_depth']['title_enable'] = TRUE;
  $options['term_node_tid_depth']['title'] = 'Related Upcoming Events ';
  $options['term_node_tid_depth']['default_argument_type'] = 'taxonomy_tid';
  $options['term_node_tid_depth']['default_argument_options']['node'] = TRUE;
  $options['term_node_tid_depth']['default_argument_options']['anyall'] = '+';
  $options['term_node_tid_depth']['default_argument_options']['vocabularies'] = array(
    'stanford_related_content' => 'stanford_related_content',
  );
  $options['term_node_tid_depth']['summary']['number_of_records'] = '0';
  $options['term_node_tid_depth']['summary']['format'] = 'default_summary';
  $options['term_node_tid_depth']['summary_options']['items_per_page'] = '25';
  $options['term_node_tid_depth']['specify_validation'] = TRUE;
  $options['term_node_tid_depth']['depth'] = '0';
  $options['term_node_tid_depth']['break_phrase'] = TRUE;

  $handler->set_option('arguments', $options);

  $handler->set_option('use_more', FALSE);
  $handler->set_option('use_more_always', FALSE);
  $handler->set_option('defaults', array('link_display', FALSE ));
  $handler->set_option('defaults', array('footer', FALSE ));

  // Footer: Global: See more link
  $options = array();
  $options['area']['id'] = 'area';
  $options['area']['table'] = 'views';
  $options['area']['field'] = 'area';
  $options['area']['ui_name'] = 'Global: See more link';
  $options['area']['content'] = '[hook_views_pre_build:events/upcoming-events]';
  $options['area']['format'] = 'content_editor_text_format';
  $options['area']['tokenize'] = TRUE;

  $handler->set_option('footer', $options);

}

/*
 * Implements hook_views_pre_build().
 *
 * @param object $view
 *   View to be altered
 *
 * This rewrites the pattern in the footer of the view and replaces it with a link to the related view page.
 *
 */
function stanford_related_events_views_pre_build(&$view) {
  if (($view->name == "stanford_events_views") || ($view->name == "stanford_events_views_override")) {
    if (($view->current_display == "filtered_upcoming_block") ||
      ($view->current_display == "block_5")) {
      $subject = $view->footer["area"]->options["content"];
      $view->footer["area"]->options["content"] = stanford_related_content_add_more_link($subject, "See more related events");
    }
  }
}




