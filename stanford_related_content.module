<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/*
 * This rewrites the pattern in the subject. It replaces it with
 * 1) the link text
 * 2) a link built with the url in the subject plus the taxonomy terms
 *
 */
function stanford_related_content_add_more_link($subject, $link_text = "See more", $pattern = "/\[hook_views_pre_build:.*\]/" ){
  $matches = array();
  preg_match($pattern, $subject, $matches);
  if (!empty($matches)){

    // Build the URL.
    $parts = explode(":", $matches[0]);
    $url = str_replace("]", "", $parts[1]);
    $options = array( 'attributes' => array( 'class' => array('more-link') ),
      'query' => array( stanford_related_content_build_tax_args() )
    );
    $a = l(t($link_text), $url, $options);

    // Replace text with the URL.
    $subject = preg_replace($pattern, $a, $subject);
  }
  return $subject;
}

/*
 * Takes the related_content terms from the current node and builds them into arguments for link options.
 *
 * @returns array of arguments
 */
function stanford_related_content_build_tax_args(){
  $result = array();
  if (arg(0) == 'node') {
    $nid = arg(1);
    if (is_numeric($nid)){
      $node = node_load($nid);
      if ((!is_null($node)) && (isset($node->field_s_related_content['und']))) {
        foreach($node->field_s_related_content['und'] as $key => $value){
          $result['term_node_tid_depth[' . $key . ']'] = $value['tid'];
        }
      }
    }
  }
  return $result;
}

/*
 * Validates a view
 *
 * @param view
 *
 */
function stanford_related_content_validate_view($view, $name = 'stanford_related_content'){

  if ($view->validate()) {
    return TRUE;
  }
  else {
    watchdog($name, "Could not validate view: %name (%title).",
      array('%name' => $view->name,
        '%title' => $view->get_title()),
      WATCHDOG_NOTICE);
    return FALSE;
  }
}